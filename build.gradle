buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.yn.com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

//生成的jar包包名和版本
jar {
    baseName = 'springBoot'
    version =  '0.1.0'
}


repositories {
	mavenCentral()
}

dependencies {
	compile ("org.springframework.boot:spring-boot-starter-web")

	//swagger2
	compile('io.springfox:springfox-swagger2:2.6.1')
	//老版本ui
	//compile('io.springfox:springfox-swagger-ui:2.6.1')
	//别人改造ui
	compile('com.github.xiaoymin:swagger-bootstrap-ui:1.6')
	
	//Gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	
	//hibernate validation
	compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.3.4.Final'
	compile group: 'javax.el', name: 'javax.el-api', version: '3.0.1-b04'
	compile group: 'org.glassfish.web', name: 'javax.el', version: '2.2.6'
	
	 //数据源
    compile 'com.alibaba:druid-spring-boot-starter:1.1.2'
    compile 'mysql:mysql-connector-java:6.0.6'
    //配置mybatis
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1"
    //mybatis-generator core 包
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version:'1.3.2'
	
	
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

// mybatis-generator.xml 配置路径
//这里会遇到个问题：MyBatis Generator 通过xml生成，有日志但是没有生成文件成功的问题， 
//原因：mac下是找不到 ./src 路径的，需要全路径，如下配置。windows则为src/main/resources/generatorConfig.xml

configurations {
    mybatisGenerator
}




def getDbProperties = {
    def properties = new Properties()
    file("/src/main/resource/db-mysql.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}
task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.user")
    ant.properties['password'] = properties.getProperty("jdbc.pass")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = this.modelPackage
    ant.properties['mapperPackage'] = this.mapperPackage
    ant.properties['sqlMapperPackage'] = this.sqlMapperPackage
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: '/src/main/resource/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
